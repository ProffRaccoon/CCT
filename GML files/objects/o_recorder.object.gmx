<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>record = timeline_add();
counter = 0;
counterToggle = 0; // 0 = off, 1 = on, -1 = reset
grid_position = 0;
image_speed = 0;
timeline_index = record;
fall_spd = 8;
songName = get_string("title of song?","ratsSong")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//  SPACE = start song to record
//  Q = start song playback
//  k = save song to ini
//  w,a,s,d,space = record note when playing (space is random note)
if keyboard_check_pressed(ord("K")) {
    ini_open("songs.ini");
    ini_write_string(songName, "0", ds_grid_write(recordDS));
    ini_write_real(songName,"size", ds_grid_height(recordDS));
    ds_grid_destroy(recordDS);
    ini_close();
}

if keyboard_check_pressed(ord("Q")) {
    obj_spawner.songName = asset_get_index(songName);
    ini_open("songs.ini");
    maxHeight = ini_read_real(songName,"size",-1);
    songDS = ds_grid_create(2,maxHeight);
    ds_grid_read(songDS,ini_read_string(songName,"0","error"));
    ini_close();
    playSong = timeline_add();
    timeline_index = playSong;
    var i;
    for(i = 0; i &lt; ds_grid_height(songDS); i += 1) {
        timeline_moment_add_script(playSong,ds_grid_get(songDS,0,i),asset_get_index(ds_grid_get(songDS,1,i)));
    }
    timeline_position = 0;
    counterToggle = -1;
    timeline_running = true;
}

    if keyboard_check_pressed(vk_space){
        if (counterToggle = 0) {
            recordDS = ds_grid_create(2,1);
            timeline_clear(record);
            audio_play_sound( asset_get_index(songName),0,false);
            scr_record_value(record,counter,0);
            counterToggle = 1;
        } else {
        scr_record_value(record,counter,1);
        }
    }
    
if keyboard_check_pressed(ord("A")){
    if (counterToggle == 1){
        scr_record_value(record,counter,2);
    }
}

if keyboard_check_pressed(ord("W")){
    if (counterToggle == 1){
        scr_record_value(record,counter,3);
    }
}

if keyboard_check_pressed(ord("D")){
    if (counterToggle == 1){
        scr_record_value(record,counter,4);
    }
}        
    

switch (counterToggle){
    case 0:
        image_index = 0;
        ;break;
    case 1:
        image_index = 1;
        counter +=1;
        ;break;
    case -1:
        counter = 0;
        image_index = 0;
        counterToggle = 0;
        ;break;
    default: ;break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
